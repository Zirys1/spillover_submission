{
    "collab_server" : "",
    "contents" : "#### Data setup ####\nbase <- here::here()\nsetwd(paste0(base, \"/data/\"))\nload(\"full.RData\")\nrm(dfr)\nlibrary(dplyr)\nlibrary(likert)\nlibrary(xlsx)\nlibrary(MASS)\nlibrary(brms)\nlibrary(sjPlot)\nlibrary(psych)\n\nmultiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {\n    library(grid)\n    \n    # Make a list from the ... arguments and plotlist\n    plots <- c(list(...), plotlist)\n    \n    numPlots = length(plots)\n    \n    # If layout is NULL, then use 'cols' to determine layout\n    if (is.null(layout)) {\n        # Make the panel\n        # ncol: Number of columns of plots\n        # nrow: Number of rows needed, calculated from # of cols\n        layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),\n                         ncol = cols, nrow = ceiling(numPlots/cols))\n    }\n    \n    if (numPlots==1) {\n        print(plots[[1]])\n        \n    } else {\n        # Set up the page\n        grid.newpage()\n        pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))\n        \n        # Make each plot, in the correct location\n        for (i in 1:numPlots) {\n            # Get the i,j matrix positions of the regions that contain this subplot\n            matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))\n            \n            print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,\n                                            layout.pos.col = matchidx$col))\n        }\n    }\n}\n\ncommon_ops <-  list(theme(plot.title = element_text(size=8),\n                          axis.text = element_text(size = 8),\n                          axis.title = element_text(size = 8),\n                          strip.text = element_text(size = 8),\n                          legend.position=\"bottom\",\n                          #   panel.grid.major=element_blank(),\n                          #   panel.grid.minor=element_blank(),\n                          panel.border=element_blank(),\n                          axis.line=element_line(),\n                          text=element_text()))\n#### Descriptive statistics ####\n#### Primary outcome by treatment ####\n\ntab1_M <- df %>%\n  filter(!is.na(M_trust)) %>% \n  group_by(treatment) %>% \n  summarise(\n    M_trust_cat1 = paste0(length(id[M_trust == 1]) , \" (\", round((length(id[M_trust == 1])/length(id))*100, 2),\" %)\"),\n    M_trust_cat2 = paste0(length(id[M_trust == 2]) , \" (\", round((length(id[M_trust == 2])/length(id))*100, 2),\" %)\"),\n    M_trust_cat3 = paste0(length(id[M_trust == 3]) , \" (\", round((length(id[M_trust == 3])/length(id))*100, 2),\" %)\"),\n    M_trust_cat4 = paste0(length(id[M_trust == 4]) , \" (\", round((length(id[M_trust == 4])/length(id))*100, 2),\" %)\"),\n    M_trust_cat5 = paste0(length(id[M_trust == 5]) , \" (\", round((length(id[M_trust == 5])/length(id))*100, 2),\" %)\"),\n    n = length(M_trust)\n  )\n\nwrite.xlsx(as.data.frame(tab1_M), \"Table1.xlsx\", sheetName = \"tab1_M\")\n\ntab1_S <- df %>%\n  filter(!is.na(S_trust)) %>% \n  group_by(treatment) %>% \n  summarise(\n    S_trust_cat1 = paste0(length(id[S_trust == 1]) , \" (\", round((length(id[S_trust == 1])/length(id))*100, 2),\" %)\"),\n    S_trust_cat2 = paste0(length(id[S_trust == 2]) , \" (\", round((length(id[S_trust == 2])/length(id))*100, 2),\" %)\"),\n    S_trust_cat3 = paste0(length(id[S_trust == 3]) , \" (\", round((length(id[S_trust == 3])/length(id))*100, 2),\" %)\"),\n    S_trust_cat4 = paste0(length(id[S_trust == 4]) , \" (\", round((length(id[S_trust == 4])/length(id))*100, 2),\" %)\"),\n    S_trust_cat5 = paste0(length(id[S_trust == 5]) , \" (\", round((length(id[S_trust == 5])/length(id))*100, 2),\" %)\"),\n    n = length(S_trust)\n  )\n\nwrite.xlsx(as.data.frame(tab1_S), \"Table1.xlsx\", sheetName = \"tab1_S\", append = T)\n\n#### Secondary outcomes by treatment ####\n####Perceived source trustworthiness, Perceived source expertise, Perceived content credibility ####\n# Cronbach's alpha (internal consistency)\n\ndf %>% \n  select(M_dep, M_hon, M_rel, M_sin, M_trust) %>% \n  mutate_all(funs(as.numeric)) %>% \n  alpha(na.rm = T)\ndf %>% \n  select(M_exp, M_expd, M_kno, M_qua, M_ski) %>% \n  mutate_all(funs(as.numeric)) %>% \n  alpha(na.rm = T)\ndf %>% \n  select(M_acc, M_bel, M_fac, M_tru, M_trust) %>% \n  mutate_all(funs(as.numeric)) %>% \n  alpha(na.rm = T)\n\nM_tab2 <- df %>% \n  group_by(treatment) %>% \n  filter(!is.na(M_trust_scale)) %>% \n  summarise(\n    mean_trust = round(mean(M_trust_scale), 2),\n    sd_trust = round(sd(M_trust_scale), 2),\n    median_trust = round(median(M_trust_scale), 2),\n    mean_exp = round(mean(M_exp_scale), 2),\n    sd_exp = round(sd(M_exp_scale), 2),\n    median_exp = round(median(M_exp_scale), 2),\n    mean_contcred = round(mean(M_contcred_scale), 2),\n    sd_contcred = round(sd(M_contcred_scale), 2),\n    median_contcred = round(median(M_contcred_scale), 2),\n    n = length(M_trust_scale)\n  )\n\nwrite.xlsx(as.data.frame(M_tab2), \"tab2.xlsx\", sheetName = \"M_tab2\")\n\n# Cronbach's alpha (internal consistency)\ndf %>% \n  select(S_dep, S_hon, S_rel, S_sin, S_trust) %>% \n  mutate_all(funs(as.numeric)) %>% \n  alpha(na.rm = T)\ndf %>% \n  select(S_exp, S_expd, S_kno, S_qua, S_ski) %>% \n  mutate_all(funs(as.numeric)) %>% \n  alpha(na.rm = T)\ndf %>% \n  select(S_acc, S_bel, S_fac, S_tru, S_trust) %>% \n  mutate_all(funs(as.numeric)) %>% \n  alpha(na.rm = T)\n\nS_tab2 <- df %>% \n  group_by(treatment) %>% \n  filter(!is.na(S_trust_scale)) %>% \n  summarise(\n    mean_trust = round(mean(S_trust_scale), 2),\n    sd_trust = round(sd(S_trust_scale), 2),\n    median_trust = round(median(S_trust_scale), 2),\n    mean_exp = round(mean(S_exp_scale), 2),\n    sd_exp = round(sd(S_exp_scale), 2),\n    median_exp = round(median(S_exp_scale), 2),\n    mean_contcred = round(mean(S_contcred_scale), 2),\n    sd_contcred = round(sd(S_contcred_scale), 2),\n    median_contcred = round(median(S_contcred_scale), 2),\n    n = length(S_trust_scale)\n  )\n\nwrite.xlsx(as.data.frame(S_tab2), \"tab2.xlsx\", sheetName = \"S_tab2\", append = T)\n\n#### Visualisation of primary outcome variables ####\n## Violin plots\n\nx1 <- ggplot(df, aes(x = treatment, y = as.numeric(M_trust), fill = treatment)) +\n  geom_violin(alpha = 0.7)  +\n  geom_boxplot(width = 0.1) +\n  geom_jitter(shape = 1, width = 0.1, height = 0.1) +\n  scale_y_continuous(breaks = c(seq(1,5,1)), limits = c(0.5,5.5)) +\n  ylab(\"Trust in Media\") +\n  xlab(\"Treatment\") +\n  theme_bw() +\n  common_ops +\n  scale_fill_grey() +\n  theme(axis.line = element_line(colour = \"black\"),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.border = element_blank(),\n        panel.background = element_blank()) +\n  guides(fill = F)\n\nx2 <- ggplot(df, aes(x = treatment, y = as.numeric(S_trust), fill = treatment)) +\n  geom_violin(alpha = 0.7)  +\n  geom_boxplot(width = 0.1) +\n  geom_jitter(shape = 1, width = 0.1, height = 0.1) +\n  scale_y_continuous(breaks = c(seq(1,5,1)), limits = c(0.5,5.5)) +\n  ylab(\"Trust in Science\") +\n  xlab(\"Treatment\") +\n  theme_bw() +\n  common_ops +\n  scale_fill_grey() +\n  theme(axis.line = element_line(colour = \"black\"),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.border = element_blank(),\n        panel.background = element_blank()) +\n  guides(fill = F)\n\n\nmultiplot(x1, x2, cols = 2)\n\n#### Inferential statistics ####\n## Non-parametric MWU test of primary outcome by treatment ##\n# H1\nchisq.test(df$M_trust[!is.na(df$M_trust)], df$treatment[!is.na(df$M_trust)]) # treats outcome as nominal and tests for equality of proportions\nwilcox.test(as.numeric(df$M_trust[df$treatment == \"No Quote\"]), as.numeric(df$M_trust[df$treatment == \"Quote\"]), alternative = \"greater\", paired = F, conf.int = T, conf.level = 0.95)\n\n# H2\nchisq.test(df$S_trust[!is.na(df$S_trust)],  df$treatment[!is.na(df$S_trust)])\nwilcox.test(as.numeric(df$S_trust[df$treatment == \"No Quote\"]), as.numeric(df$S_trust[df$treatment == \"Quote\"]), alternative = \"greater\", paired = F, conf.int = T, conf.level = 0.95)\n\n\n## Ordered logistic regression ##\ndf$StudyArea <- relevel(df$StudyArea, \"Other\")\n# With control variables #\n# H1\ndf_r_con <- df %>% \n  dplyr::select(M_trust, treatment, Age, Gender, StudyArea, contribution)\nM2_M_ol <- polr(M_trust ~ ., data = df_r_con, method = \"logistic\", Hess = T) # similar to ologit in Stata\nsummary(M2_M_ol)\n\n# one-sided tests (post-estimation) https://stackoverflow.com/questions/8089797/inference-about-slope-coefficient-in-r\ncoef<- summary(M2_M_ol)$coefficients[1,][[1]] # extracts treatment coefficient\nse <- summary(M2_M_ol)$coefficients[1,][[2]] # extracts standard error, and t-value\nd_f <- summary(M2_M_ol)$edf # extracts effective degrees of freedom used by model\nm <- 0 # value to which coefficients should be compared\n\npaste0(\"H0: \", round(coef,3), \" >= \", m, \", p-value: \", round(pnorm((coef - m)/se, lower.tail = T), 3), \" (H0: \", round(coef,3), \" = 0, p-value: \", round(pnorm((coef - m)/se, lower.tail = T)*2, 3), \")\", \" [assumes normal distribution]\") # one-sided, H0: coef >= 0, Ha: coef < 0 (Normal-distribution) (Stata olit-output)\n\n# H2\ndf_r_con <- df %>% \n  dplyr::select(S_trust, treatment, Age, Gender, StudyArea, contribution)\nM2_S_ol <- polr(S_trust ~ ., data = df_r_con, method = \"logistic\", Hess = T) # similar to ologit in Stata\nsummary(M2_S_ol)\n\n# one-sided tests (post-estimation) https://stackoverflow.com/questions/8089797/inference-about-slope-coefficient-in-r\ncoef<- summary(M2_S_ol)$coefficients[1,][[1]] # extracts treatment coefficient\nse <- summary(M2_S_ol)$coefficients[1,][[2]] # extracts standard error, and t-value\nd_f <- summary(M2_S_ol)$edf # extracts effective degrees of freedom used by model\nm <- 0 # value to which coefficients should be compared\n\npaste0(\"H0: \", round(coef,3), \" >= \", m, \", p-value: \", round(pnorm((coef - m)/se, lower.tail = T), 3), \" (H0: \", round(coef,3), \" = 0, p-value: \", round(pnorm((coef - m)/se, lower.tail = T)*2, 3), \")\", \" [assumes normal distribution]\") # one-sided, H0: coef >= 0, Ha: coef < 0 (Normal-distribution) (Stata olit-output)\n\n\n#### Bayesian ordered logistic regression ####\ntheme_set(theme_minimal())\nget_prior(M_trust ~ treatment + Age + Gender + StudyArea + contribution, data = df, family = cumulative(link = \"logit\"))\nget_prior(S_trust ~ treatment + Age + Gender + StudyArea + contribution, data = df, family = cumulative(link = \"logit\"))\n\n## The following treatment priors are flat (Gelman et al. 2008) ##\nlevels(df$treatment) <- c(\"No Quote\", \"Quote\")\npriors2 <- c(\n  set_prior(\"uniform(-10,10)\", class = \"b\", lb = -10, ub = 10), \n  set_prior(\"cauchy(0,10)\", class = \"Intercept\") \n)\n\n# H1 (prior2)\nB1_M_bf <- brm(M_trust ~ treatment + Age + Gender + StudyArea + contribution, data = df, family = cumulative(link = \"logit\"),\n               prior = priors2, sample_prior = T)\nsummary(B1_M_bf)\nWAIC(B1_M_bf)\nhypothesis(B1_M_bf, \"treatmentQuote < 0\") \nhypothesis(B1_M_bf, \"treatmentQuote = 0\") \n\n# H2\nB1_S_bf <- brm(S_trust ~ treatment + Age + Gender + StudyArea + contribution, data = df, family = cumulative(link = \"logit\"),\n            prior = priors2, sample_prior = T, control = list(adapt_delta = 0.95))\nsummary(B1_S_bf)\nWAIC(B1_S_bf) \nhypothesis(B1_S_bf, \"treatmentQuote < 0\")\nhypothesis(B1_S_bf, \"treatmentQuote = 0\")\n\n\n## The following treatment priors are more informative: increased belief that there is no treatment effect ##\npriors2 <- c(\n  set_prior(\"cauchy(0,1/sqrt(2))\", class = \"b\", coef = \"treatmentQuote\"),\n  set_prior(\"cauchy(0,10)\", class = \"Intercept\") \n)\n\n# H1\nB1_M_bi <- brm(M_trust ~ treatment + Age + Gender + StudyArea + contribution, data = df, family = cumulative(link = \"logit\"),\n            prior = priors2, sample_prior = T, control = list(max_treedepth = 15))\nsummary(B1_M_bi)\nWAIC(B1_M_bi) \nhypothesis(B1_M_bi, \"treatmentQuote < 0\")\nhypothesis(B1_M_bi, \"treatmentQuote = 0\")\n\n# H2\nB1_S_bi <- brm(S_trust ~ treatment + Age + Gender + StudyArea + contribution, data = df, family = cumulative(link = \"logit\"),\n            prior = priors2, sample_prior = T, control = list(max_treedepth = 15))\nsummary(B1_S_bi)\nWAIC(B1_S_bi) \nhypothesis(B1_S_bi, \"treatmentQuote < 0\")\nhypothesis(B1_S_bi, \"treatmentQuote = 0\")\n\n#### Secondary analyses ####\n#### Visualisation of secondary outcomes ####\nM_violin_ts <- ggplot(df, aes(x = treatment, y = as.numeric(M_trust_scale), fill = treatment)) +\n  geom_violin(alpha = 0.7)  +\n  geom_boxplot(width = 0.1) +\n  geom_jitter(shape = 1) +\n  theme_bw() +\n  ylab(\"Trust (scale) in\\nmedia source\") +\n  xlab(\"Treatment\") +\n  common_ops +\n  scale_fill_grey() +\n  theme(axis.line = element_line(colour = \"black\"),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.border = element_blank(),\n        panel.background = element_blank()) +\n  guides(fill = F)\n\nS_violin_ts <- ggplot(df, aes(x = treatment, y = as.numeric(S_trust_scale), fill = treatment)) +\n  geom_violin(alpha = 0.7) +\n  geom_boxplot(width = 0.1) +\n  geom_jitter(shape = 1) +\n  theme_bw() +\n  ylab(\"Trust (scale) in\\nscience source\") +\n  xlab(\"Treatment\") +\n  common_ops +\n  scale_fill_grey() +\n  theme(axis.line = element_line(colour = \"black\"),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.border = element_blank(),\n        panel.background = element_blank()) +\n  guides(fill = F)\n\nM_violin_es <- ggplot(df, aes(x = treatment, y = as.numeric(M_exp_scale), fill = treatment)) +\n  geom_violin(alpha = 0.7)  +\n  geom_boxplot(width = 0.1) +\n  geom_jitter(shape = 1) +\n  theme_bw() +\n  common_ops +  \n  ylab(\"Expertise of\\nmedia source\") +\n  xlab(\"Treatment\") +\n  scale_fill_grey() +\n  theme(axis.line = element_line(colour = \"black\"),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.border = element_blank(),\n        panel.background = element_blank()) +\n  guides(fill = F)\n\nS_violin_es <- ggplot(df, aes(x = treatment, y = as.numeric(S_exp_scale), fill = treatment)) +\n  geom_violin(alpha = 0.7) +\n  geom_boxplot(width = 0.1) +\n  geom_jitter(shape = 1) +\n  theme_bw() +\n  ylab(\"Expertise of\\nscience source\") +\n  xlab(\"Treatment\") +\n    common_ops +\n  scale_fill_grey() +\n  theme(axis.line = element_line(colour = \"black\"),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.border = element_blank(),\n        panel.background = element_blank()) +\n  guides(fill = F)\n\nM_violin_cs <- ggplot(df, aes(x = treatment, y = as.numeric(M_contcred_scale), fill = treatment)) +\n  geom_violin(alpha = 0.7)  +\n  geom_boxplot(width = 0.1) +\n  geom_jitter(shape = 1) +\n  theme_bw() +\n  common_ops +\n  ylab(\"Content credibility\\nof media article\") +\n  xlab(\"Treatment\") +\n  scale_fill_grey() +\n  theme(axis.line = element_line(colour = \"black\"),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.border = element_blank(),\n        panel.background = element_blank()) +\n  guides(fill = F)\n\nS_violin_cs <- ggplot(df, aes(x = treatment, y = as.numeric(S_contcred_scale), fill = treatment)) +\n  geom_violin(alpha = 0.7) +\n  geom_boxplot(width = 0.1) +\n  geom_jitter(shape = 1) +\n  ylab(\"Content credibility\\nof science article\") +\n  xlab(\"Treatment\") +\n  theme_bw() +\n  common_ops +\n  scale_fill_grey() +\n  theme(axis.line = element_line(colour = \"black\"),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.border = element_blank(),\n        panel.background = element_blank()) +\n  guides(fill = F)\n\nmultiplot(M_violin_ts, M_violin_es, M_violin_cs, S_violin_ts, S_violin_es, S_violin_cs, cols = 2)\n\n# Inferential statistics on secondary outcomes (OLS Regression)\ndf_r_con <- df %>% \n  dplyr::select(M_trust_scale, treatment, Age, Gender, StudyArea, contribution)\nM_trust_scale_lm_cv <- lm(M_trust_scale ~ treatment + Age + Gender + relevel(StudyArea, \"Other\") + contribution, data = df_r_con)\ndf_r_con <- df %>% \n  dplyr::select(M_exp_scale, treatment, Age, Gender, StudyArea, contribution)\nM_exp_scale_lm_cv <- lm(M_exp_scale ~ treatment + Age + Gender + relevel(StudyArea, \"Other\") + contribution, data = df_r_con)\ndf_r_con <- df %>% \n  dplyr::select(M_contcred_scale, treatment, Age, Gender, StudyArea, contribution)\nM_contcred_scale_lm_cv <- lm(M_contcred_scale ~ treatment + Age + Gender + relevel(StudyArea, \"Other\") + contribution, data = df_r_con)\n\nsjt.lm(M_trust_scale_lm_cv, M_exp_scale_lm_cv, M_contcred_scale_lm_cv, robust = T, show.ci = T, show.fstat = T, show.aic = T)\n\n\ndf_r_con <- df %>% \n  dplyr::select(S_trust_scale, treatment, Age, Gender, StudyArea, contribution)\nS_trust_scale_lm_cv <- lm(S_trust_scale ~ treatment + Age + Gender + relevel(StudyArea, \"Other\") + contribution, data = df_r_con)\ndf_r_con <- df %>% \n  dplyr::select(S_exp_scale, treatment, Age, Gender, StudyArea, contribution)\nS_exp_scale_lm_cv <- lm(S_exp_scale ~ treatment + Age + Gender + relevel(StudyArea, \"Other\") + contribution, data = df_r_con)\ndf_r_con <- df %>% \n  dplyr::select(S_contcred_scale, treatment, Age, Gender, StudyArea, contribution)\nS_contcred_scale_lm_cv <- lm(S_contcred_scale ~ treatment + Age + Gender + relevel(StudyArea, \"Other\") + contribution, data = df_r_con)\n\nsjt.lm(S_trust_scale_lm_cv, S_exp_scale_lm_cv, S_contcred_scale_lm_cv, robust = T, show.ci = T, show.fstat = T, show.aic = T)\n\n#### Order effects ####\nwilcox.test(as.numeric(df$M_trust[df$ZO_order == 0]), as.numeric(df$M_trust[df$ZO_order == 1]))\nwilcox.test(as.numeric(df$S_trust[df$ZO_order == 0]), as.numeric(df$S_trust[df$ZO_order == 1]))\nwilcox.test(as.numeric(df$M_trust[df$ZO_order == 0 & df$treatment == \"No Quote\"]), as.numeric(df$M_trust[df$ZO_order == 1 & df$treatment == \"No Quote\"]))\nwilcox.test(as.numeric(df$S_trust[df$ZO_order == 0 & df$treatment == \"No Quote\"]), as.numeric(df$S_trust[df$ZO_order == 1 & df$treatment == \"No Quote\"]))\nwilcox.test(as.numeric(df$M_trust[df$ZO_order == 0 & df$treatment == \"Quote\"]), as.numeric(df$M_trust[df$ZO_order == 1 & df$treatment == \"Quote\"]))\nwilcox.test(as.numeric(df$S_trust[df$ZO_order == 0 & df$treatment == \"Quote\"]), as.numeric(df$S_trust[df$ZO_order == 1 & df$treatment == \"Quote\"]))\n\n#### Additional analyses (not in pre analysis protocol) ####\n## Difference in trust perception between science and media (WS) ##\nwilcox.test(as.numeric(df$M_trust[!is.na(df$M_trust) & !is.na(df$S_trust)]),  as.numeric(df$S_trust[!is.na(df$M_trust) & !is.na(df$S_trust)], paired = T))\n\n#### OrderxTreatment interaction ####\nsummary(polr(S_trust~ZO_order*treatment + Age + Gender + StudyArea + contribution, df,method = \"logistic\", Hess = T))\nsummary(polr(M_trust~ZO_order*treatment + Age + Gender + StudyArea + contribution, df,method = \"logistic\", Hess = T))\n\n#### Calculate Cohen's d ####\ncohens_d <- function(x, y) {\n  lx <- length(x)- 1\n  ly <- length(y)- 1\n  md  <- abs(mean(x) - mean(y))        ## mean difference (numerator)\n  csd <- lx * var(x) + ly * var(y)\n  csd <- csd/(lx + ly)\n  csd <- sqrt(csd)                     ## common sd computation\n  \n  cd  <- md/csd                        ## cohen's d\n  return(cd)\n}\n\ncohens_d(as.numeric(df$M_trust[!is.na(df$M_trust) & df$treatment == \"No Quote\"]), as.numeric(df$M_trust[!is.na(df$M_trust) & df$treatment == \"Quote\"]))\ncohens_d(as.numeric(df$S_trust[!is.na(df$S_trust) & df$treatment == \"No Quote\"]), as.numeric(df$S_trust[!is.na(df$S_trust) & df$treatment == \"Quote\"]))",
    "created" : 1519745502435.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "13|70|47|0|\n",
    "hash" : "2980751214",
    "id" : "D4F2312D",
    "lastKnownWriteTime" : 1519826698,
    "last_content_update" : 1519826698011,
    "path" : "Z:/Projects/R Projects/spillover_submission/scripts/analysis.R",
    "project_path" : "scripts/analysis.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}